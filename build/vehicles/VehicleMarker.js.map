{"version":3,"sources":["VehicleMarker.js"],"names":["VehicleMarker","v","lastReport","seconds","min","Math","floor","sec","minStr","props","vehicle","rsn","routeShortName","length","getLastReportDate","status","stopSequence","vehicleId","indexOf","replace","stopLink","stopId","routeLongName","reportDate","tripId","blockId","controller","retVal","isTrackingVehicle","size","position","lat","lon","strokeColor","colorText","fillColor","color","classnames","isTracking","icon","className","iconSize","makePopup","L","Browser","mobile","makeToolTip","routeType","heading","zoom","leaflet","map","getZoom","e","closeZoom","makeRotatedMarker","midZoom","makeCircleMarker","farZoom","makeMarker","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport 'leaflet';\nimport 'leaflet-rotatedmarker';\nimport { divIcon } from \"leaflet\";\nimport { Marker, CircleMarker, Popup, Tooltip } from \"react-leaflet\";\nimport myWithLeaflet from '../map/MyWithLeaflet';\n\nimport VehicleTracker from './VehicleTracker';\n\nimport RotatedMarker from '../map/RotatedMarker';\nimport makeVehicleIcon from './icons';\n\n\nclass VehicleMarker extends React.Component {\n\n  getLastReportDate(v) {\n    let lastReport = \"\";\n    if(v.seconds > 60) {\n      const min = Math.floor(v.seconds / 60);\n      const sec = v.seconds - min * 60;\n      const minStr = min == 1 ? \"minute\" : \"minutes\";\n\n      if(sec > 0)\n        lastReport = `${min} ${minStr} & ${sec} seconds ago`;\n      else\n        lastReport = `${min} ${minStr} ago`;\n    } else {\n      lastReport = `${v.seconds} seconds ago`;\n    }\n    return lastReport;\n  }\n\n  makeToolTip() {\n    const v = this.props.vehicle;\n\n    let rsn = v.routeShortName;\n    if(rsn != null && rsn.length <= 3)\n      rsn = \"Line \" + rsn;\n\n    return (\n      <Tooltip>\n        <span><b>{rsn}</b>: {this.getLastReportDate(v)}</span>\n      </Tooltip>\n    );\n  }\n\n  makePopup() {\n    const v = this.props.vehicle;\n\n    let status = \"unknown\";\n    if(v.status == \"IN_TRANSIT_TO\")\n      status = \"en-route to stop \";\n    else if(v.status == \"STOPPED_AT\")\n      if(v.stopSequence == 1)\n        status = \"beginning route from stop \";\n      else\n        status = \"stopped at \";\n\n    let vehicle = \"\";\n    if(v.vehicleId.indexOf('+') > 0)\n      vehicle = \"Vehicles: \" + v.vehicleId.replace(/\\+/g, \", \");\n    else\n      vehicle = \"Vehicle: \" + v.vehicleId;\n\n    const stopLink = `https://trimet.org/ride/stop.html?stop_id=${v.stopId}`;\n\n    return (\n      <Popup>\n        <div>\n          <span><b>{v.routeLongName}</b></span><br/>\n          <span>Last reported: {this.getLastReportDate(v)}</span><br/>\n          <span>Report date: {v.reportDate}</span><br/>\n          <span>Status: {status} <a target=\"#\" href={stopLink}>{v.stopId}</a></span><br/>\n          <span>Trip: {v.tripId}, Block: {v.blockId}</span><br/>\n          <span>{vehicle}</span> <br/>\n          <VehicleTracker vehicle={v} marker={this} controller={this.props.controller} />  <br/>\n        </div>\n      </Popup>\n    );\n  }\n\n  isTracking() {\n    const retVal = this.props.controller.isTrackingVehicle(this.props.vehicle);\n    return retVal;\n  }\n\n  makeCircleMarker(size) {\n    const v = this.props.vehicle;\n\n    const position = [v.lat, v.lon];\n\n    let strokeColor = (v.colorText || 'white');\n    let fillColor = (v.color || 'white');\n\n    let classnames = 'vehicle-marker vehicle-circle';\n    if(this.isTracking())\n      classnames = classnames + ' vehicle-circle-selected';\n\n    const icon = divIcon({\n      className: classnames,\n      iconSize: [size, size]\n    });\n\n    return(\n      <Marker\n        icon={icon}\n        position={position}\n      >\n        { this.makePopup() }\n        { (L.Browser.mobile !== true) && this.makeToolTip() }\n      </Marker>\n    );\n  }\n\n  makeRotatedMarker() {\n    const v = this.props.vehicle;\n\n    let classnames = 'vehicle-marker vehicle-icon';\n    if(this.isTracking())\n      classnames = classnames + ' vehicle-icon-selected';\n\n    const icon = makeVehicleIcon(classnames, v.routeType, v.routeShortName);\n    const position = [v.lat, v.lon];\n\n    let heading = v.heading;\n    if(heading == null || heading < 0 || heading >= 360)\n      heading = 0;\n\n    return(\n      <RotatedMarker\n        rotationAngle={heading}\n        rotationOrigin={'center center'}\n        icon={icon}\n        position={position}\n      >\n        { this.makePopup() }\n        { (L.Browser.mobile !== true) && this.makeToolTip() }\n      </RotatedMarker>\n    );\n  }\n\n  getZoom() {\n    let retVal = 15;\n    try {\n      const zoom = this.props.leaflet.map.getZoom();\n      retVal = zoom;\n    }\n    catch (e) {\n      // console.log(e);\n    }\n    return retVal;\n  }\n\n  makeMarker() {\n    const zoom = this.getZoom();\n    if(zoom >= this.props.closeZoom)\n      return this.makeRotatedMarker();\n    else if(zoom >= this.props.midZoom)\n      return this.makeCircleMarker(13.0);\n    else if(zoom >= this.props.farZoom)\n      return this.makeCircleMarker(9.0);\n    else\n      return this.makeCircleMarker(5.0);\n  }\n\n  render() {\n    return( this.makeMarker() );\n  }\n}\n\nexport default myWithLeaflet(VehicleMarker);\n"]}