{"version":3,"sources":["VehicleTracker.js"],"names":["VehicleTracker","state","buttonText","txt","veh","isTracking","getButtonText","props","vehicle","setState","controller","trackedVehicle","retVal","isTrackingVehicle","isTracked","e","handleClick","React","Component"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEMA,c;;;;;;;;;;;;;;;;8MACJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE;AADN,K;;;;;kCAIM;AACZ,UAAIC,GAAG,GAAG,IAAV;AACA,UAAIC,GAAG,GAAG,IAAV;;AAEA,UAAG,KAAKC,UAAL,EAAH,EAAsB;AACpBF,QAAAA,GAAG,GAAG,KAAKG,aAAL,CAAmB,KAAnB,CAAN;AACAF,QAAAA,GAAG,GAAG,IAAN;AACD,OAHD,MAGO;AACLD,QAAAA,GAAG,GAAG,KAAKG,aAAL,CAAmB,IAAnB,CAAN;AACAF,QAAAA,GAAG,GAAG,KAAKG,KAAL,CAAWC,OAAjB;AACD;;AAED,WAAKC,QAAL,CAAc;AAACP,QAAAA,UAAU,EAAEC;AAAb,OAAd;AACA,WAAKI,KAAL,CAAWG,UAAX,CAAsBD,QAAtB,CAA+B;AAACE,QAAAA,cAAc,EAAEP;AAAjB,OAA/B;AACD;;;iCAEY;AACX,UAAMQ,MAAM,GAAG,KAAKL,KAAL,CAAWG,UAAX,CAAsBG,iBAAtB,CAAwC,KAAKN,KAAL,CAAWC,OAAnD,CAAf;AACA,aAAOI,MAAP;AACD;;;kCAEaE,S,EAAW;AACvB,UAAIZ,UAAU,GAAG,IAAjB;AACA,UAAGY,SAAH,EACEZ,UAAU,GAAG,eAAb,CADF,KAGEA,UAAU,GAAG,eAAb;AACF,aAAOA,UAAP;AACD;;;6BAEQ;AAAA;;AACP,UAAMA,UAAU,GAAG,KAAKI,aAAL,CAAmB,KAAKD,UAAL,EAAnB,CAAnB;AACA,aACE;AAAQ,QAAA,OAAO,EAAE,iBAACU,CAAD;AAAA,iBAAO,MAAI,CAACC,WAAL,CAAiBD,CAAjB,CAAP;AAAA;AAAjB,SAA8Cb,UAA9C,CADF;AAGD;;;;EAxC0Be,eAAMC,S;;eA2CpBlB,c","sourcesContent":["import React from 'react';\n\nimport 'leaflet';\nimport 'leaflet-rotatedmarker';\n\nclass VehicleTracker extends React.Component {\n  state = {\n    buttonText: null\n  }\n\n  handleClick() {\n    let txt = null;\n    let veh = null;\n\n    if(this.isTracking()) {\n      txt = this.getButtonText(false);\n      veh = null;\n    } else {\n      txt = this.getButtonText(true);\n      veh = this.props.vehicle;\n    }\n\n    this.setState({buttonText: txt});\n    this.props.controller.setState({trackedVehicle: veh});\n  }\n\n  isTracking() {\n    const retVal = this.props.controller.isTrackingVehicle(this.props.vehicle);\n    return retVal;\n  }\n\n  getButtonText(isTracked) {\n    let buttonText = null;\n    if(isTracked)\n      buttonText = \"Stop Tracking\";\n    else\n      buttonText = \"Track Vehicle\";\n    return buttonText;\n  }\n\n  render() {\n    const buttonText = this.getButtonText(this.isTracking());\n    return (\n      <button onClick={(e) => this.handleClick(e)}>{buttonText}</button>\n    );\n  }\n}\n\nexport default VehicleTracker;\n"]}