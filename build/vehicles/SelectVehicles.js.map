{"version":3,"sources":["SelectVehicles.js"],"names":["SelectVehicles","state","selected_routes","selected_stop","vehicles","route_data","getVehicles","refresh","props","r","_refreshTimer","setInterval","clearInterval","visible","_startRefreshing","_stopRefreshing","nextProps","ds","retVal","isNaN","lastTimeStamp","d","Date","now","routeId","default","fetch","api","then","res","dlm","headers","get","isTimeStampNewer","json","setState","console","log","length","map","v","i","MapLayer"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAGA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEMA,c;;;;;;;;;;;;;;;;8MACJC,K,GAAQ;AACNC,MAAAA,eAAe,EAAE,EADX;AAENC,MAAAA,aAAa,EAAE,IAFT;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,UAAU,EAAE,EALN,CAKU;;AALV,K;;;;;uCAQW;AAAA;;AACjB;AACA,WAAKC,WAAL,GAFiB,CAIjB;;AACA,UAAIC,OAAO,GAAG,KAAd;;AACA,UAAI,KAAKC,KAAL,CAAWD,OAAf,EAAwB;AACtB,YAAIE,CAAC,GAAG,KAAKD,KAAL,CAAWD,OAAnB;AACA,YAAIE,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAI,GAAlB,EACEA,CAAC,GAAGA,CAAC,GAAG,IAAR;AACF,YAAIA,CAAC,IAAI,IAAL,IAAaA,CAAC,GAAG,MAArB,EACEF,OAAO,GAAGE,CAAV;AACH,OAZgB,CAcjB;;;AACA,WAAKC,aAAL,GAAqBC,WAAW,CAAC,YAAM;AACrC,QAAA,MAAI,CAACL,WAAL;AACD,OAF+B,EAE7BC,OAF6B,CAAhC;AAGD;;;sCAEiB;AAChB,UAAI,KAAKG,aAAT,EACEE,aAAa,CAAC,KAAKF,aAAN,CAAb;AACH;;;wCAEmB;AAClB,UAAI,KAAKF,KAAL,CAAWK,OAAf,EAAwB;AACtB,aAAKC,gBAAL;AACH;;;2CAEsB;AACrB,WAAKC,eAAL;AACD;;;8CAEyBC,S,EAAW;AACnC,UAAI,CAAC,KAAKR,KAAL,CAAWK,OAAZ,IAAuBG,SAAS,CAACH,OAArC,EAA8C;AAC5C,aAAKC,gBAAL;AACD,OAFD,MAGK,IAAI,KAAKN,KAAL,CAAWK,OAAX,IAAsB,CAACG,SAAS,CAACH,OAArC,EAA8C;AACjD,aAAKE,eAAL;AACD;AACF;;;qCAEgBE,E,EAAI;AACnB;AACA,UAAIC,MAAM,GAAG,IAAb;;AACA,UAAGD,EAAE,IAAI,CAACE,KAAK,CAACF,EAAD,CAAf,EAAqB;AACnB;AACA,YAAG,KAAKhB,KAAL,CAAWmB,aAAd,EAA6B;AAC3B,cAAG,KAAKnB,KAAL,CAAWmB,aAAX,IAA4BH,EAA/B,EACEC,MAAM,GAAG,KAAT,CADF,KAGE,KAAKjB,KAAL,CAAWmB,aAAX,GAA2BH,EAA3B;AACH,SALD,MAOE,KAAKhB,KAAL,CAAWmB,aAAX,GAA2BH,EAA3B;AACH;;AACD,aAAOC,MAAP;AACD;;;kCAEa;AAAA;;AACZ,UAAMG,CAAC,GAAGC,IAAI,CAACC,GAAL,EAAV;AACA,UAAMd,CAAC,GAAG,KAAKD,KAAL,CAAWgB,OAAX,IAAsB,KAAKhB,KAAL,CAAWiB,OAA3C,CAFY,CAEyC;;AAErDC,MAAAA,KAAK,WAAI,KAAKlB,KAAL,CAAWmB,GAAf,qBAA6BlB,CAA7B,mBAAuCY,CAAvC,EAAL,CACCO,IADD,CACM,UAAAC,GAAG,EAAI;AACX,YAAIX,MAAM,GAAG,IAAb;AACA,YAAIY,GAAG,GAAGD,GAAG,CAACE,OAAJ,CAAYC,GAAZ,CAAgB,oBAAhB,CAAV;AACA,YAAG,MAAI,CAACC,gBAAL,CAAsBH,GAAtB,CAAH,EACEZ,MAAM,GAAGW,GAAG,CAACK,IAAJ,EAAT;AACF,eAAOhB,MAAP;AACD,OAPD,EAQCU,IARD,CAQM,UAAAM,IAAI,EAAI;AACZ,YAAGA,IAAI,IAAI,IAAX,EACE,MAAI,CAACC,QAAL,CAAc;AACZ/B,UAAAA,QAAQ,EAAE8B;AADE,SAAd;AAGH,OAbD;AAcD,K,CAED;;;;yCACqB1B,K,EAAO,CAAE;;;yCACTA,K,EAAO,CAAE;;;6BAErB;AACP,UAAIJ,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAA1B;AACAgC,MAAAA,OAAO,CAACC,GAAR,CAAYjC,QAAQ,CAACkC,MAArB;AAEA,UAAG,CAAClC,QAAD,IAAaA,QAAQ,CAACkC,MAAT,KAAoB,CAApC,EACE,OAAO,6BAAC,0BAAD;AAAc,QAAA,EAAE,EAAC;AAAjB,QAAP,CADF,KAGE,OACE,6BAAC,0BAAD;AAAc,QAAA,EAAE,EAAC;AAAjB,SACIlC,QAAQ,CAACmC,GAAT,CAAa,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAU,6BAAC,sBAAD;AAAe,UAAA,GAAG,EAAE,OAAOA,CAA3B;AAA8B,UAAA,OAAO,EAAED;AAAvC,UAAV;AAAA,OAAb,CADJ,CADF;AAKH;;;;EAzG0BE,sB;;eA4Gd1C,c","sourcesContent":["import 'leaflet';\nimport React from 'react';\nimport { FeatureGroup,  MapLayer } from \"react-leaflet\";\n\nimport VehicleMarker from \"./VehicleMarker\";\n\n// polyfills\nimport 'promise-polyfill/src/polyfill';\nimport 'whatwg-fetch';\n\nclass SelectVehicles extends MapLayer {\n  state = {\n    selected_routes: [],\n    selected_stop: null,\n\n    vehicles: [],\n    route_data: []  // TBD Array of <RouteData > components, which comprise route and stop geo data\n  };\n\n  _startRefreshing() {\n    // initial vehicle refresh\n    this.getVehicles();\n\n    // get refresh values (default 10 seconds), and convert from secs to millisecs\n    let refresh = 10000;\n    if (this.props.refresh) {\n      let r = this.props.refresh;\n      if (r > 0 && r <= 100)\n        r = r * 1000;\n      if (r >= 1000 && r < 100000)\n        refresh = r;\n    }\n\n    // do the recurring refresh of the get vehicles AJAX call\n    this._refreshTimer = setInterval(() => {\n      this.getVehicles();\n    }, refresh);\n  }\n\n  _stopRefreshing() {\n    if (this._refreshTimer)\n      clearInterval(this._refreshTimer);\n  }\n\n  componentDidMount() {\n    if (this.props.visible) // ?? who sets this.props.visible\n      this._startRefreshing();\n  }\n\n  componentWillUnmount() {\n    this._stopRefreshing();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.props.visible && nextProps.visible) {\n      this._startRefreshing();\n    }\n    else if (this.props.visible && !nextProps.visible) {\n      this._stopRefreshing();\n    }\n  }\n\n  isTimeStampNewer(ds) {\n    /** compares datestamp header of the data to last load's datestamp */\n    let retVal = true;\n    if(ds && !isNaN(ds)) {\n      // note: we set last ts only if the new ds is newer (larger), or if last ds is empty\n      if(this.state.lastTimeStamp) {\n        if(this.state.lastTimeStamp >= ds)\n          retVal = false;\n        else\n          this.state.lastTimeStamp = ds;\n      }\n      else\n        this.state.lastTimeStamp = ds;\n    }\n    return retVal;\n  }\n\n  getVehicles() {\n    const d = Date.now();\n    const r = this.props.routeId || this.props.default;  // (might have to strip off TriMet, etc...\n\n    fetch(`${this.props.api}/routes/${r}?time=${d}`)\n    .then(res => {\n      let retVal = null;\n      let dlm = res.headers.get('Data-Last-Modified');\n      if(this.isTimeStampNewer(dlm))\n        retVal = res.json();\n      return retVal;\n    })\n    .then(json => {\n      if(json != null)\n        this.setState({\n          vehicles: json\n        });\n    });\n  }\n\n  // need to implement create interface (and update interface for older React-Leaflet versions)\n  createLeafletElement(props) {}\n  updateLeafletElement(props) {}\n\n  render() {\n    let vehicles = this.state.vehicles;\n    console.log(vehicles.length);\n\n    if(!vehicles || vehicles.length === 0)\n      return <FeatureGroup id=\"vehicles fg\" />;\n    else\n      return (\n        <FeatureGroup id=\"vehicles fg\" >\n          { vehicles.map((v, i) => <VehicleMarker key={\"vm\" + i} vehicle={v} />) }\n        </FeatureGroup>\n      );\n  }\n}\n\nexport default SelectVehicles;\n"]}