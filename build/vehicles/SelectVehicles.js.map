{"version":3,"sources":["SelectVehicles.js"],"names":["SelectVehicles","state","selected_routes","selected_stop","vehicles","route_data","getVehicles","refresh","props","r","_refreshTimer","setInterval","clearInterval","visible","_startRefreshing","_stopRefreshing","nextProps","d","Date","now","routeId","default","fetch","api","then","res","json","setState","console","log","length","map","v","MapLayer","VehicleMarker","vehicle","position","lat","lon","status","stopSequence","lastReport","seconds","min","Math","floor","sec","minStr","vehicleId","indexOf","replace","stopLink","stopId","icon","routeType","routeShortName","heading","id","routeLongName","reportDate","L","Browser","mobile","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport 'leaflet';\nimport 'leaflet-rotatedmarker';\nimport { FeatureGroup,  MapLayer, Marker, Popup, Tooltip } from \"react-leaflet\";\nimport RotatedMarker from '../map/RotatedMarker';\nimport makeVehicleIcon from './icons';\n\n// polyfills\nimport 'promise-polyfill/src/polyfill';\nimport 'whatwg-fetch';\n\nclass SelectVehicles extends MapLayer {\n  state = {\n    selected_routes: [],\n    selected_stop: null,\n\n    vehicles: [],\n    route_data: []  // TBD Array of <RouteData > components, which comprise route and stop geo data\n  };\n\n  _startRefreshing() {\n    // initial vehicle refresh\n    this.getVehicles();\n\n    // get refresh values (default 10 seconds), and convert from secs to millisecs\n    let refresh = 10000;\n    if (this.props.refresh) {\n      let r = this.props.refresh;\n      if (r > 0 && r <= 100)\n        r = r * 1000;\n      if (r >= 1000 && r < 100000)\n        refresh = r;\n    }\n\n    // do the recurring refresh of the get vehicles AJAX call\n    this._refreshTimer = setInterval(() => {\n      this.getVehicles();\n    }, refresh);\n  }\n\n  _stopRefreshing() {\n    if (this._refreshTimer)\n      clearInterval(this._refreshTimer);\n  }\n\n  componentDidMount() {\n    if (this.props.visible) // ?? who sets this.props.visible\n      this._startRefreshing();\n  }\n\n  componentWillUnmount() {\n    this._stopRefreshing();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.props.visible && nextProps.visible) {\n      this._startRefreshing();\n    }\n    else if (this.props.visible && !nextProps.visible) {\n      this._stopRefreshing();\n    }\n  }\n\n  getVehicles() {\n    const d = Date.now();\n    const r = this.props.routeId || this.props.default;  // (might have to strip off TriMet, etc...\n\n    fetch(`${this.props.api}/routes/${r}?time=${d}`)\n    .then(res => {\n      return res.json();\n    })\n    .then(res => {\n      this.setState({\n        vehicles: res\n      });\n    });\n  }\n\n  // need to implement create interface (and update interface for older React-Leaflet versions)\n  createLeafletElement(props) {}\n  updateLeafletElement(props) {}\n\n  render() {\n    //const createVehicleMarker = (v) =>\n    console.log(this.state.vehicles.length);\n\n    return (\n      <FeatureGroup>\n        { this.state.vehicles.map(v => <VehicleMarker vehicle={v} />) }\n      </FeatureGroup>\n    );\n  }\n}\n\n\nclass VehicleMarker extends React.Component {\n  render() {\n    const v = this.props.vehicle;\n    const position = [v.lat, v.lon];\n\n    let status = \"unknown\";\n    if(v.status == \"IN_TRANSIT_TO\")\n      status = \"en-route to stop \";\n    else if(v.status == \"STOPPED_AT\")\n      if(v.stopSequence == 1)\n        status = \"beginning route from stop \";\n      else\n        status = \"stopped at \";\n\n    let lastReport = \"\";\n    if(v.seconds > 60) {\n      const min = Math.floor(v.seconds / 60);\n      const sec = v.seconds - min * 60;\n      const minStr = min == 1 ? \"minute\" : \"minutes\";\n\n      if(sec > 0)\n        lastReport = `${min} ${minStr} & ${sec} seconds ago`;\n      else\n        lastReport = `${min} ${minStr} ago`;\n    } else {\n      lastReport = `${v.seconds} seconds ago`;\n    }\n\n    let vehicle = \"\";\n    if(v.vehicleId.indexOf('+') > 0)\n      vehicle = \"Vehicles: \" + v.vehicleId.replace(/\\+/g, \", \");\n    else\n      vehicle = \"Vehicle: \" + v.vehicleId;\n\n    const stopLink = `https://trimet.org/ride/stop.html?stop_id=${v.stopId}`;\n    const icon = makeVehicleIcon(v.routeType, v.routeShortName);\n\n    // todo: put this valid 360 deg in service\n    let heading = v.heading;\n    if(heading == null || heading < 0 || heading >= 360)\n      heading = 1;\n\n    return(\n      <RotatedMarker rotationAngle={heading} rotationOrigin={'center center'} icon={icon} key={v.id} position={position} >\n        <Popup>\n          <span><b>{v.routeLongName}</b></span><br/>\n          <span>Last reported: {lastReport}</span><br/>\n          <span>Report date: {v.reportDate}</span><br/>\n          <span>Status: {status} <a target=\"#\" href={stopLink}>{v.stopId}</a></span><br/>\n          <span>{vehicle}</span><br/>\n        </Popup>\n        { (L.Browser.mobile !== true) &&\n          <Tooltip>\n            <span><b>{v.routeShortName}</b>: {lastReport}</span>\n          </Tooltip>\n        }\n      </RotatedMarker>\n    );\n  }\n}\n\nexport default SelectVehicles;\n"]}