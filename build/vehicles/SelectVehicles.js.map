{"version":3,"sources":["SelectVehicles.js"],"names":["catchFetchErrors","response","ok","Error","statusText","SelectVehicles","state","selectedRoutes","selectedStop","routeData","mapZoom","trackedVehicle","vehicles","closeZoom","midZoom","farZoom","props","visible","_startRefreshing","enableCallBacks","_stopRefreshing","setAnimationClass","trackVehicle","nextProps","leaflet","getVehicles","refresh","r","_refreshTimer","setInterval","clearInterval","setBusy","id","v","findVehicle","ll","lat","lon","getLeafletContext","map","setView","doAnimate","animateClass","markers","document","getElementsByClassName","i","length","classList","add","remove","z","zoom","getZoom","setState","on","startZoomCB","endZoomCB","res","retVal","lm","headers","get","lmd","Date","lastModified","lastTimeStamp","_isBusy","val","e","console","log","d","now","routeId","default","isBusy","fetch","api","then","isNewer","json","catch","error","MapLayer"],"mappings":"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","sourcesContent":["import 'leaflet';\nimport React from 'react';\nimport { FeatureGroup,  MapLayer } from \"react-leaflet\";\nimport myWithLeaflet from '../map/MyWithLeaflet';\n\nimport VehicleMarker from \"./VehicleMarker\";\nimport VehicleGeometry from \"./VehicleGeometry\";\n\n// polyfills\nimport 'promise-polyfill/src/polyfill';\nimport 'whatwg-fetch';\n\nfunction catchFetchErrors(response) {\n    // :see: https://www.tjvantoll.com/2015/09/13/fetch-and-errors/\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response;\n}\n\nclass SelectVehicles extends MapLayer {\n  state = {\n    selectedRoutes: [],\n    selectedStop: null,\n    routeData: [],  // TBD Array of <RouteData > components, which comprise route and stop geo data\n    mapZoom: 0,\n\n    trackedVehicle: null,\n    vehicles: []\n  };\n\n  // these zoom layers control which markers are shown (e.g. closeZoom is where icons are turned on)\n  closeZoom = 15;\n  midZoom = 13;\n  farZoom = 10;\n\n  componentDidMount() {\n    if (this.props.visible) {\n      this._startRefreshing();\n    }\n    this.enableCallBacks();\n  }\n\n  componentWillUnmount() {\n    this._stopRefreshing();\n  }\n\n  componentDidUpdate() {\n    this.setAnimationClass(true);\n    this.trackVehicle();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.props.visible && nextProps.visible) {\n      this._startRefreshing();\n    }\n    else if (this.props.visible && !nextProps.visible) {\n      this._stopRefreshing();\n    }\n    this.enableCallBacks();\n  }\n\n  /**\n   * this method is used for backporting to React 15\n   * v16:  return this.props.leaflet;\n   * v15:  return this.context;\n   */\n  getLeafletContext() {\n    return this.props.leaflet;\n  }\n\n  _startRefreshing() {\n    // initial vehicle refresh\n    this.getVehicles();\n\n    // get refresh values (default 10 seconds), and convert from secs to millisecs\n    let refresh = 10000;\n    if (this.props.refresh) {\n      let r = this.props.refresh;\n      if (r > 0 && r <= 100)\n        r = r * 1000;\n      if (r >= 1000 && r < 100000)\n        refresh = r;\n    }\n\n    // do the recurring refresh of the get vehicles AJAX call\n    this._refreshTimer = setInterval(() => {\n      this.getVehicles();\n    }, refresh);\n  }\n\n  _stopRefreshing() {\n    if (this._refreshTimer) {\n      clearInterval(this._refreshTimer);\n      this.setBusy(false);\n    }\n  }\n\n  trackVehicle() {\n    if(this.state.trackedVehicle != null && this.state.trackedVehicle.id != null) {\n      let v = this.findVehicle(this.state.trackedVehicle.id);\n      if(v != null) {\n        const ll = [v.lat, v.lon];\n        this.getLeafletContext().map.setView(ll);\n        this.state.trackedVehicle = v;      // update the state with newest vehicle\n      }\n    }\n  }\n\n  setAnimationClass(doAnimate) {\n    const animateClass = 'vehicle-animate';\n\n    let markers = document.getElementsByClassName(\"vehicle-marker\");\n    for(let i = 0; i < markers.length; i++) {\n      if(doAnimate)\n        markers[i].classList.add(animateClass);\n      else\n        markers[i].classList.remove(animateClass);\n    }\n    let z = 1;\n  }\n\n  startZoomCB() {\n    if(this.props.visible) {\n      this.setAnimationClass(false);\n    }\n  }\n\n  endZoomCB() {\n    if(this.props.visible) {\n      // set state, so that markers will redraw on zoom\n      // TODO: if calling setState here is perf-problematic, could call setState only on this.closeZoom = (zoom / zoom-1)\n      const zoom = this.getLeafletContext().map.getZoom();\n      this.setState({mapZoom: zoom});\n\n      this.setAnimationClass(true);\n    }\n  }\n\n  enableCallBacks() {\n    this.getLeafletContext().map.on('zoomstart', () => { this.startZoomCB('start'); });\n    this.getLeafletContext().map.on('zoomend', () => { this.endZoomCB('end'); });\n  }\n\n  isNewer(res) {\n    /** compares datestamp header of the data to last load's datestamp */\n    let retVal = true;\n    let lm = res.headers.get('Last-Modified');\n    let lmd = new Date(lm);\n\n    if (this.lastModified === null) {\n      this.lastModified == lmd;  // last modified is empty, so set it and say data is new\n      retVal = true;\n    }\n    else {\n      if (this.lastTimeStamp > lmd)\n        retVal = false;\n      else\n        this.lastTimeStamp = lmd;\n    }\n    return retVal;\n  }\n\n  isBusy() {\n    return this._isBusy;\n  }\n\n  setBusy(val) {\n    this._isBusy = val;\n  }\n\n  findVehicle(id) {\n    let retVal = null;\n    try {\n      for(let i = 0; i < this.state.vehicles.length; i++) {\n        let v = this.state.vehicles[i];\n        if(v.id == id) {\n          retVal = v;\n          break;\n        }\n      }\n    } catch (e) {\n      console.log(\"ERROR findVehicle \" + id + \" \" + e);\n    }\n    return retVal;\n  }\n\n  getVehicles() {\n    const d = Date.now();\n    const r = this.props.routeId || this.props.default;  // (might have to strip off TriMet, etc...\n\n    // wrap the fetch with\n    if(!this.isBusy()) {\n      this.setBusy(true);\n\n      // eg: https://maps.trimet.org/gtfs/rt/vehicles/routes/100\n      fetch(`${this.props.api}/routes/${r}?time=${d}`)\n      .then(catchFetchErrors)\n      .then(res => {\n        let retVal = null;\n        if(this.isNewer(res))\n          retVal = res.json();\n        return retVal;\n      })\n      .then(json => {\n        this.setBusy(false);\n        if(json != null)\n          this.setState({\n            vehicles: json\n          });\n      })\n      .catch(error => {\n        this.setBusy(false); // unlock the busy flag on errors\n        console.log(\"VEH fetch() error: \" + error);\n      });\n    }\n  }\n\n  // need to implement create interface (and update interface for older React-Leaflet versions)\n  createLeafletElement(props) {}\n  updateLeafletElement(props) {}\n\n\n  // TODO: turn off animate css\n  // this.context.map.on('moveend', () => {\n  // { /* see below: https://react-leaflet.js.org/docs/en/context.html */ }\n  // <LeafletConsumer>{context => console.log(context)}</LeafletConsumer>\n\n  render() {\n    const vehicles = this.state.vehicles;\n    console.log(vehicles.length);\n\n\n    if(!vehicles || vehicles.length === 0)\n      return <FeatureGroup id=\"vehicles fg\" />;\n    else\n      return (\n        <FeatureGroup id=\"vehicles fg\" >\n          {\n            vehicles.map((v) => <VehicleMarker key={v.id}\n                                               vehicle={v}\n                                               controller={this}\n                                               closeZoom={this.closeZoom}\n                                               midZoom={this.midZoom}\n                                               farZoom={this.farZoom}\n            />)\n          }\n          <VehicleGeometry trackedVehicle={this.state.trackedVehicle} />\n        </FeatureGroup>\n      );\n  }\n}\n\nexport default myWithLeaflet(SelectVehicles);\n"]}