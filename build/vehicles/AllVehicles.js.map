{"version":3,"sources":["AllVehicles.js"],"names":["AllVehicles","state","vehicles","getVehicles","interval","setInterval","clearInterval","fetch","then","res","json","setState","map","vehicle","idx","console","log","length","icon","html","routeNumber","key","vehicleID","position","latitude","longitude","React","Component"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;AAGA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEMA,W;;;;;;;;;;;;;;;;2MACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;;;;wCAIY;AAAA;;AAClB,WAAKC,WAAL;AACA,WAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAM;AAChC,QAAA,MAAI,CAACF,WAAL;AACD,OAF0B,EAExB,IAFwB,CAA3B;AAGD;;;2CAEsB;AACrBG,MAAAA,aAAa,CAAC,KAAKF,QAAN,CAAb;AACD;;;kCAEa;AAAA;;AACZG,MAAAA,KAAK,CAAC,2BAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQ,UAAAC,GAAG,EAAI;AACX,QAAA,MAAI,CAACE,QAAL,CAAc;AACZT,UAAAA,QAAQ,EAAEO;AADE,SAAd;AAGD,OARH;AASD;;;6BAEQ;AAAA;;AACP,aACE;AAAK,QAAA,KAAK,EAAC;AAAX,SAEE,KAAKR,KAAL,CAAWC,QAAX,CAAoBU,GAApB,CAAwB,UAACC,OAAD,EAAUC,GAAV,EAAkB;AACxCC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACf,KAAL,CAAWC,QAAX,CAAoBe,MAAhC;AACA,YAAMC,IAAI,GAAG,sBAAQ;AACnBC,UAAAA,IAAI,kBAAWN,OAAO,CAACO,WAAnB;AADe,SAAR,CAAb;AAGA,YAAMC,GAAG,GAAGR,OAAO,CAACS,SAApB;AACA,YAAMC,QAAQ,GAAG,CAACV,OAAO,CAACW,QAAT,EAAmBX,OAAO,CAACY,SAA3B,CAAjB;AAEA,eACE,6BAAC,oBAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,IAAI,EAAEP,IAA7B;AAAmC,UAAA,GAAG,EAAEG,GAAxC;AAA6C,UAAA,QAAQ,EAAEE;AAAvD,WACE,6BAAC,mBAAD,QACE,oDAAYF,GAAZ,CADF,CADF,CADF;AAOD,OAfD,CAFF,CADF;AAsBD;;;;EAnDuBK,eAAMC,S;;eAsDjB3B,W","sourcesContent":["import React from 'react';\n\nimport { divIcon } from \"leaflet\";\nimport { Marker, Popup } from \"react-leaflet\";\n\n// polyfills\nimport 'promise-polyfill/src/polyfill';\nimport 'whatwg-fetch';\n\nclass AllVehicles extends React.Component {\n  state = {\n    vehicles: []\n  };\n\n  componentDidMount() {\n    this.getVehicles();\n    this.interval = setInterval(() => {\n      this.getVehicles();\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getVehicles() {\n    fetch(\"https://pdxlivebus.now.sh\")\n      .then(res => {\n        return res.json();\n      })\n      .then(res => {\n        this.setState({\n          vehicles: res\n        });\n      });\n  }\n\n  render() {\n    return(\n      <div class=\"vehicles\">\n      {\n        this.state.vehicles.map((vehicle, idx) => {\n          console.log(this.state.vehicles.length);\n          const icon = divIcon({\n            html: `<span>${vehicle.routeNumber}</span>`,\n          });\n          const key = vehicle.vehicleID;\n          const position = [vehicle.latitude, vehicle.longitude];\n\n          return (\n            <Marker class=\"marker\" icon={icon} key={key} position={position}>\n              <Popup>\n                <span>VEH: {key}</span>\n              </Popup>\n            </Marker>\n          );\n        })\n      }\n      </div>\n    )\n  }\n}\n\nexport default AllVehicles;\n"]}