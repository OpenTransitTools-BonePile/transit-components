{"version":3,"sources":["RotatedMarker.js"],"names":["RotatedMarker","props","el","LeafletMarker","position","getOptions","contextValue","leaflet","popupContainer","fromProps","toProps","leafletElement","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","draggable","dragging","enable","disable","rotationAngle","setRotationAngle","rotationOrigin","setRotationOrigin","children","MapLayer","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAKA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,a;;;;;;;;;;;;;yCAKiBC,K,EAAO;AAC1B,UAAMC,EAAE,GAAG,IAAIC,eAAJ,CAAkBF,KAAK,CAACG,QAAxB,EAAkC,KAAKC,UAAL,CAAgBJ,KAAhB,CAAlC,CAAX;AACA,WAAKK,YAAL,qBAAyBL,KAAK,CAACM,OAA/B;AAAwCC,QAAAA,cAAc,EAAEN;AAAxD;AACA,aAAOA,EAAP;AACD;;;yCAEoBO,S,EAAWC,O,EAAS;AACvC,UAAIA,OAAO,CAACN,QAAR,KAAqBK,SAAS,CAACL,QAAnC,EAA6C;AAC3C,aAAKO,cAAL,CAAoBC,SAApB,CAA8BF,OAAO,CAACN,QAAtC;AACD;;AACD,UAAIM,OAAO,CAACG,IAAR,KAAiBJ,SAAS,CAACI,IAA/B,EAAqC;AACnC,aAAKF,cAAL,CAAoBG,OAApB,CAA4BJ,OAAO,CAACG,IAApC;AACD;;AACD,UAAIH,OAAO,CAACK,YAAR,KAAyBN,SAAS,CAACM,YAAvC,EAAqD;AACnD,aAAKJ,cAAL,CAAoBK,eAApB,CAAoCN,OAAO,CAACK,YAA5C;AACD;;AACD,UAAIL,OAAO,CAACO,OAAR,KAAoBR,SAAS,CAACQ,OAAlC,EAA2C;AACzC,aAAKN,cAAL,CAAoBO,UAApB,CAA+BR,OAAO,CAACO,OAAvC;AACD;;AACD,UAAIP,OAAO,CAACS,SAAR,KAAsBV,SAAS,CAACU,SAApC,EAA+C;AAC7C,YAAIT,OAAO,CAACS,SAAR,KAAsB,IAA1B,EAAgC;AAC9B,eAAKR,cAAL,CAAoBS,QAApB,CAA6BC,MAA7B;AACD,SAFD,MAEO;AACL,eAAKV,cAAL,CAAoBS,QAApB,CAA6BE,OAA7B;AACD;AACF;;AACD,UAAIZ,OAAO,CAACa,aAAR,KAA0Bd,SAAS,CAACc,aAAxC,EAAuD;AACrD,aAAKZ,cAAL,CAAoBa,gBAApB,CAAqCd,OAAO,CAACa,aAA7C;AACD;;AACD,UAAIb,OAAO,CAACe,cAAR,KAA2BhB,SAAS,CAACgB,cAAzC,EAAyD;AACvD,aAAKd,cAAL,CAAoBe,iBAApB,CAAsChB,OAAO,CAACe,cAA9C;AACD;AACF;;;6BAEQ;AAAA,UACCE,QADD,GACc,KAAK1B,KADnB,CACC0B,QADD;AAEP,aAAOA,QAAQ,IAAI,IAAZ,IAAoB,KAAKrB,YAAL,IAAqB,IAAzC,GAAgD,IAAhD,GACL,6BAAC,6BAAD;AAAiB,QAAA,KAAK,EAAE,KAAKA;AAA7B,SAA4CqB,QAA5C,CADF;AAGD;;;;EA5CyBC,sB;;AAAtB5B,a,CACG6B,Y,GAAe;AACpBJ,EAAAA,cAAc,EAAE;AADI,C;;eA8CT,4BAAczB,aAAd,C","sourcesContent":["/**\n * @see https://github.com/verdie-g/react-leaflet-rotatedmarker/issues/1\n */\n\n\nimport React from 'react';\nimport { Marker as LeafletMarker } from 'leaflet';\nimport { LeafletProvider, MapLayer } from 'react-leaflet';\nimport myWithLeaflet from './MyWithLeaflet';\nimport 'leaflet-rotatedmarker';\n\nclass RotatedMarker extends MapLayer {\n  static defaultProps = {\n    rotationOrigin: 'center',\n  };\n\n  createLeafletElement(props) {\n    const el = new LeafletMarker(props.position, this.getOptions(props));\n    this.contextValue = { ...props.leaflet, popupContainer: el };\n    return el;\n  }\n\n  updateLeafletElement(fromProps, toProps) {\n    if (toProps.position !== fromProps.position) {\n      this.leafletElement.setLatLng(toProps.position);\n    }\n    if (toProps.icon !== fromProps.icon) {\n      this.leafletElement.setIcon(toProps.icon);\n    }\n    if (toProps.zIndexOffset !== fromProps.zIndexOffset) {\n      this.leafletElement.setZIndexOffset(toProps.zIndexOffset);\n    }\n    if (toProps.opacity !== fromProps.opacity) {\n      this.leafletElement.setOpacity(toProps.opacity);\n    }\n    if (toProps.draggable !== fromProps.draggable) {\n      if (toProps.draggable === true) {\n        this.leafletElement.dragging.enable();\n      } else {\n        this.leafletElement.dragging.disable();\n      }\n    }\n    if (toProps.rotationAngle !== fromProps.rotationAngle) {\n      this.leafletElement.setRotationAngle(toProps.rotationAngle);\n    }\n    if (toProps.rotationOrigin !== fromProps.rotationOrigin) {\n      this.leafletElement.setRotationOrigin(toProps.rotationOrigin);\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    return children == null || this.contextValue == null ? null : (\n      <LeafletProvider value={this.contextValue}>{children}</LeafletProvider>\n    );\n  }\n}\n\nexport default myWithLeaflet(RotatedMarker);\n"]}